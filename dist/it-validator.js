"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var index=Object.freeze({__proto__:null});const sanitize=t=>{const e={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","/":"&#x2F;"},i=/[&<>"'/]/ig;return t.replace(i,r=>e[r])},trim=t=>t.trim(),invalidNumber=t=>!(!isNaN(t)||typeof t=="number"||t instanceof Number),invalidDate=t=>!(!isNaN(Date.parse(t))||t instanceof Date),invalidArray=t=>!(t instanceof Array),invalidObject=t=>!(t instanceof Object&&!(t instanceof Date)&&!(t instanceof Array)),invalidString=t=>!(typeof t=="string"||t instanceof String),invalidBoolean=t=>!(typeof t=="boolean"||[0,1,"1","0","true","false"].includes(t)),invalidType=(t,e)=>{if(!t)return!1;switch(t){case Boolean:return invalidBoolean(e)?"Boolean":!1;case Number:return invalidNumber(e)?"Number":!1;case Date:return invalidDate(e)?"Date":!1;case Array:return invalidArray(e)?"Array":!1;case Object:return invalidObject(e)?"Object":!1;case String:return invalidString(e)?"String":!1;default:return!1}},hasValueRegex=/\s/g,invalidAlphaRegex=/^[a-zA-Z\s]+$/,invalidAlphaNumRegex=/^[0-9a-zA-Z\s]+$/,invalidAlphaDashRegex=/^[0-9a-zA-Z\s-_]+$/,invalidEmailRegex=/^(([^<>()[\]\.,;:\s@\"]+(\.[^<>()[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,})$/i,hasValue=(t=null)=>(typeof t=="string"&&(t=t.replace(hasValueRegex,"").length?t:null),typeof t!="undefined"&&t!==null),invalidAlpha=(t=void 0)=>!t||typeof t!="string"?!0:!invalidAlphaRegex.test(t),invalidAlphaNum=(t=void 0)=>!t||typeof t!="string"?!0:!invalidAlphaNumRegex.test(t),invalidAlphaDash=(t=void 0)=>!t||typeof t!="string"?!0:!invalidAlphaDashRegex.test(t),invalidEmail=(t=void 0)=>!t||typeof t!="string"?!0:!invalidEmailRegex.test(t),invalidIn=(t,e=void 0)=>!t.length||!(t instanceof Array)?!0:!t.includes(e),invalidRegex=(t,e=void 0)=>(e instanceof Date&&(e=e.toISOString()),!t.test(String(e))),invalidMax=(t,e=void 0)=>typeof e=="number"&&Number(e)>t||e.length>t,invalidMin=(t,e=void 0)=>typeof e=="number"&&Number(e)<t||e.length<t,invalidRequiredIf=(t,e,i=void 0)=>t.length!==2||!(t[0]in e)||e[t[0]]===t[1]&&!hasValue(i),invalidRequiredUnless=(t,e,i=void 0)=>t.length!==2||!(t[0]in e)||e[t[0]]!==t[1]&&!hasValue(i),invalidRequiredWith=(t,e,i=void 0)=>!hasValue(i)&&t.some(r=>r in e&&hasValue(e[r])),invalidRequiredWithout=(t,e,i=void 0)=>!hasValue(i)&&t.some(r=>!(r in e)||!hasValue(e[r])),invalidRequiredWithoutAll=(t,e,i=void 0)=>!hasValue(i)&&t.every(r=>!(r in e)&&!hasValue(e[r])),errorMessage=(t,e,i)=>t?typeof t=="string"||typeof t!="object"?t:t[e]?t[e]:i:i,execIfPresent=(t,e)=>t?e:()=>!1,validateField=async(t,e)=>{if(!e)return{err:null,value:void 0};let i=t[e.ruleName];if(e.required&&!hasValue(i))return{err:errorMessage(e.message,"required","is required"),value:i};if(e.ruleName in t){const r=invalidType(e.type,i);if(r)return{err:errorMessage(e.message,"type",`value ${i} doesn't match the type ${r}`),value:i};if(execIfPresent(!!e.min,invalidMin)(e.min,i))return{err:errorMessage(e.message,"min",`value ${i} has a min of ${e.min}`),value:i};if(execIfPresent(!!e.max,invalidMax)(e.max,i))return{err:errorMessage(e.message,"max",`value ${i} has a max of ${e.max}`),value:i};if(execIfPresent(e.alpha,invalidAlpha)(i))return{err:errorMessage(e.message,"alpha",`value ${i} must contain alphabetic characters only`),value:i};if(execIfPresent(e.alphaNum,invalidAlphaNum)(i))return{err:errorMessage(e.message,"alphaNum",`value ${i} must contain alphanumeric characters only`),value:i};if(execIfPresent(e.alphaDash,invalidAlphaDash)(i))return{err:errorMessage(e.message,"alphaDash",`value ${i} must contain alphanumeric characters, dashes or undescores only`),value:i};if(execIfPresent(e.email,invalidEmail)(i))return{err:errorMessage(e.message,"email",`value ${i} must be a valid email`),value:i};if(execIfPresent(!!e.in,invalidIn)(e.in,i))return{err:errorMessage(e.message,"in",`value ${i} is not in ${e.in}`),value:i};if(execIfPresent(!!e.regex,invalidRegex)(e.regex,i))return{err:errorMessage(e.message,"regex",`value ${i} has not a valid format`),value:i}}if(e.validate){const r=await e.validate(i);if(r)return{err:errorMessage(e.message,"validate",`${r}`),value:i}}return execIfPresent(!!e.requiredIf,invalidRequiredIf)(e.requiredIf,t,i)?{err:errorMessage(e.message,"requiredIf",`value ${i}, needs to be present if ${e.requiredIf[0]} is equal to ${e.requiredIf[1]}`),value:i}:execIfPresent(!!e.requiredUnless,invalidRequiredUnless)(e.requiredUnless,t,i)?{err:errorMessage(e.message,"requiredUnless",`value ${i}, needs to be present unless ${e.requiredWithout[0]} is equal to ${e.requiredWithout[1]}`),value:i}:execIfPresent(!!e.requiredWith,invalidRequiredWith)(e.requiredWith,t,i)?{err:errorMessage(e.message,"requiredWith",`value ${i}, needs to be present if any of [${e.requiredWith}] is present`),value:i}:execIfPresent(!!e.requiredWithout,invalidRequiredWithout)(e.requiredWithout,t,i)?{err:errorMessage(e.message,"requiredWithout",`value ${i}, needs to be present if one of [${e.requiredWithout}] is not present`),value:i}:execIfPresent(!!e.requiredWithoutAll,invalidRequiredWithoutAll)(e.requiredWithoutAll,t,i)?{err:errorMessage(e.message,"requiredWithoutAll",`value ${i}, needs to be present if all of [${e.requiredWithoutAll}] is not present`),value:i}:!e.required&&e.defaultAfterValidate&&!hasValue(i)?{err:null,value:e.defaultAfterValidate}:(i&&(e.clean&&((e.clean===!0||e.clean.trim)&&(i=trim(i)),(e.clean===!0||e.clean.sanitize)&&(i=sanitize(i))),invalidType({...e,type:Number},i)&&!invalidType({...e,type:String},i)&&(i=decodeURI(i))),{err:null,value:i})},loop=async(t,e)=>{let i={},r={};for(let n in e){let f=t[n];const a=e[n];if(!a){a===null&&f!==void 0&&(i[n]=f,t[n]=f);continue}if(a.ruleName=n,!a.required&&a.default&&!hasValue(f)){i[n]=a.default,t[n]=a.default;continue}let{err:o,value:s}=await validateField(t,a);if(o){r[n]=o;continue}if(s!==void 0){if(a.type===Array||a.type===Object){if(!a.children){i[n]=s,t[n]=s;continue}if(a.type===Array){const d=[],l={};for(const u in s){const c=await loop(s[u],a.children);c.err?l[u]=c.err:d.push(c.values)}o=l,o&&(r[n]=o),s=d}else{const d=await loop(s,a.children);o=d.err,o&&(r[n]=o),s=d.values}}!o&&s!==void 0&&(i[n]=s,t[n]=s)}}return{err:Object.keys(r).length?r:null,values:i}},validate=async(t,e)=>t?e?await(async(i,r)=>await loop(i,r(i)))(t,e):{err:{validatorFatal:"Need some rules to validate against"},values:null}:{err:{validatorFatal:"Need some fields to validate"},values:null};exports.Types=index,exports.hasValue=hasValue,exports.invalidAlpha=invalidAlpha,exports.invalidAlphaDash=invalidAlphaDash,exports.invalidAlphaNum=invalidAlphaNum,exports.invalidArray=invalidArray,exports.invalidBoolean=invalidBoolean,exports.invalidDate=invalidDate,exports.invalidEmail=invalidEmail,exports.invalidIn=invalidIn,exports.invalidMax=invalidMax,exports.invalidMin=invalidMin,exports.invalidNumber=invalidNumber,exports.invalidObject=invalidObject,exports.invalidRegex=invalidRegex,exports.invalidString=invalidString,exports.invalidType=invalidType,exports.sanitize=sanitize,exports.trim=trim,exports.validate=validate;
